library(Bayeshmmcts)
rhub::check_for_cran()
rhub::check_for_cran()
library(roxygen2) # In-Line Documentation for R
library(devtools) # Tools to Make Developing R Packages Easier
library(testthat) # Unit Testing for R
library(usethis)  # Automate Package and Project Setup
install.packages(c("broom", "groupdata2", "kableExtra", "rmarkdown", "svglite"))
library(available)
install.packages("available")
library(available)
available::suggest("Easily extract information about your sample")
available::suggest("Bayesian estimation for PHMM and ZIPHMM")
available::suggest("Bayesian estimation for hidden markov model")
available::available("overviewR", browse = FALSE)
available::available("Bayeshmmcts", browse = FALSE)
devtools::test()
devtools::test_coverage()
devtools::test()
devtools::test_coverage()
library(roxygen2) # In-Line Documentation for R
library(devtools) # Tools to Make Developing R Packages Easier
library(testthat) # Unit Testing for R
library(usethis)  # Automate Package and Project Setup
library(covr) # Test Coverage for Packages
covr::codecov(token = "4e18b403-6e46-4fe9-8f6a-4ed404f480d6")
# Check for CRAN specific requirements
rhub::check_for_cran()
devtools::load_all(".")
library(Bayeshmmcts)
library(Bayeshmmcts)
library(Bayeshmmcts)
library(Bayeshmmcts)
library(Bayeshmmcts)
# Bayesian Poisson hidden Markov Model
BayesPHHMM_2states <- bayes.PHMM(y = Homicides, m = 2, chains = 3, iter = 1000,
control = list(adapt_delta = 0.99))
print(BayesPHHMM_2states, digits_summary = 3)
data("Homicides")
library(Bayeshmmcts)
data("homicides") # load data
Homicides <- ts(data = round(homicides$Rate), start = 1960) # convert to time series
# fit stationary Poisson hidden Markov Model 2 states (clasical theory)
PHMM_2states <- pois.HMM.mle(o = Homicides, m = 2,
lambda0 = c(30, 63),
A0 = matrix(c(0.9, 0.1, 0.1, 0.9), 2, 2, byrow = TRUE),
stationary = TRUE)
print(PHMM_2states)
# Bayesian Poisson hidden Markov Model
BayesPHHMM_2states <- bayes.PHMM(y = Homicides, m = 2, chains = 3, iter = 1000,
control = list(adapt_delta = 0.99))
print(BayesPHHMM_2states, digits_summary = 3)
# Check for CRAN specific requirements
rhub::check_for_cran()
# Check for CRAN specific requirements
rhub::check_for_cran()
# Check for CRAN specific requirements
rhub::check_for_cran()
# Check for CRAN specific requirements
rhub::check_for_cran()
rhub::list_validated_emails()
library(rhub)
validate_email("rediazb@unal.edu.co")
validate_email("rediazb@unal.edu.co")
knitr::kable(platforms(), row.names = FALSE)
1+1+
11
